name: Prebuild
on:
  release:
    types: [published]
jobs:
  build_x86_64:
    name: Prebuild x86_64
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, ubuntu-22.04, ubuntu-24.04, windows-2022]
        node: [18, 20, 22, 24]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Node v${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: npm install --build-from-source

      - name: Package prebuild
        run: npm run build

      - name: Upload prebuild asset
        uses: icrawl/action-artifact@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: 'build/stage/**/*.tar.gz'

  build_musl_x86_64:
    name: Prebuild x86_64 (musl)
    runs-on: ubuntu-latest
    container:
      image: node:${{ matrix.node }}-alpine
    strategy:
      fail-fast: false
      matrix:
        node: [18, 20, 22, 24]
    steps:
      - name: Setup env with Node v${{ matrix.node }}
        run: |
          apk add --update
          apk add --no-cache ca-certificates git curl build-base python3 g++ make

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install dependencies
        run: npm install --build-from-source

      - name: Package prebuild
        run: npm run build

      - name: Upload prebuild asset
        uses: icrawl/action-artifact@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: 'build/stage/**/*.tar.gz'

  build_aarch64_linux:
    name: Prebuild aarch64 Linux
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        node: [18, 20, 22, 24]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Node v${{ matrix.node }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: npm install --build-from-source

      - name: Package prebuild
        run: |
          sudo apt update -y && sudo apt install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          CC=aarch64-linux-gnu-gcc CXX=aarch64-linux-gnu-g++ npx node-pre-gyp --target_arch=arm64 configure build package

      - name: Upload prebuild asset
        uses: icrawl/action-artifact@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: 'build/stage/**/*.tar.gz'

  build_musl_aarch64:
    name: Prebuild aarch64 (musl)
    runs-on: ubuntu-latest
    container:
      image: node:${{ matrix.node }}-alpine
    strategy:
      fail-fast: false
      matrix:
        node: [18, 20, 22, 24]
    steps:
      - name: Setup env with Node v${{ matrix.node }}
        run: |
          apk add --update
          apk add --no-cache ca-certificates git curl build-base python3 g++ make

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup musl cross compiler
        run: |
          curl -OL https://musl.cc/aarch64-linux-musl-cross.tgz
          tar -xzvf aarch64-linux-musl-cross.tgz
          $(pwd)/aarch64-linux-musl-cross/bin/aarch64-linux-musl-gcc --version

      - name: Install dependencies
        run: npm install --build-from-source

      - name: Package prebuild
        run: |
          CC=$(pwd)/aarch64-linux-musl-cross/bin/aarch64-linux-musl-gcc \
          CXX=$(pwd)/aarch64-linux-musl-cross/bin/aarch64-linux-musl-g++ \
          npx node-pre-gyp --target_arch=arm64 configure build package

      - name: Upload prebuild asset
        uses: icrawl/action-artifact@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          path: 'build/stage/**/*.tar.gz'
